/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GIS.database;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Formatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author keneuoe
 */
public class DB_connection extends javax.swing.JFrame {

    /**
     * Creates new form db_connection
     */
    public DB_connection() {
        initComponents();
        display_shapes();
    }
    
    public ArrayList<Shapes> shapeList(){
        ArrayList<Shapes>shapeList = new ArrayList<>();
        try{
            String dbname = dbname_textfield.getText();
            String table = table_textfield.getText();
            String db_table = dbname + "." + table;
            
            Connection dbmsconn = getConnection();
            Statement sta = dbmsconn.createStatement();
            String query1 = "select * from "+ db_table;
            ResultSet rs = sta.executeQuery(query1);
            Shapes shapes;
            while(rs.next()) {
                shapes = new Shapes(rs.getInt("gid"), rs.getString("name"), rs.getString("geom") );
                shapeList.add(shapes);
            }
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        return shapeList;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jTextField1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        password_textfield = new javax.swing.JPasswordField();
        Connect = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        host_textfield = new javax.swing.JTextField();
        port_textfield = new javax.swing.JTextField();
        user_textfield = new javax.swing.JTextField();
        connected_label = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dbname_textfield = new javax.swing.JTextField();
        DBMSName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        table_textfield = new javax.swing.JTextField();
        saveToDb = new javax.swing.JButton();
        saveAsCsv = new javax.swing.JButton();
        Get = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        file_viewer = new javax.swing.JTable();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jTextField1.setText("jTextField1");

        jLabel6.setText("jLabel6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        password_textfield.setText("jPasswordField1");
        password_textfield.setPreferredSize(new java.awt.Dimension(109, 26));

        Connect.setText("Connect");
        Connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectActionPerformed(evt);
            }
        });

        jLabel1.setText("DBMS Name");

        jLabel2.setText("Host");

        jLabel3.setText("Port");

        jLabel4.setText("Username");

        jLabel5.setText("Password");

        host_textfield.setText("localhost");
        host_textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                host_textfieldActionPerformed(evt);
            }
        });

        port_textfield.setText("3306");
        port_textfield.setPreferredSize(new java.awt.Dimension(109, 26));

        user_textfield.setText("root");
        user_textfield.setMinimumSize(new java.awt.Dimension(10, 109));
        user_textfield.setPreferredSize(new java.awt.Dimension(109, 26));
        user_textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_textfieldActionPerformed(evt);
            }
        });

        jLabel7.setText("Database Name");

        dbname_textfield.setText("Database Name");
        dbname_textfield.setPreferredSize(new java.awt.Dimension(109, 26));

        DBMSName.setText("mysql");
        DBMSName.setPreferredSize(new java.awt.Dimension(109, 26));

        jLabel8.setText("Table Name");

        table_textfield.setText("Table");
        table_textfield.setPreferredSize(new java.awt.Dimension(109, 26));

        saveToDb.setText("Save into database");
        saveToDb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveToDbActionPerformed(evt);
            }
        });

        saveAsCsv.setText("Save as csv");
        saveAsCsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsCsvActionPerformed(evt);
            }
        });

        Get.setText("View File Entries");
        Get.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetActionPerformed(evt);
            }
        });

        file_viewer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "gid", "name", "geom"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(file_viewer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(263, 263, 263)
                .addComponent(connected_label)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel8))
                                .addGap(42, 42, 42))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(password_textfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(user_textfield, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dbname_textfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(table_textfield, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DBMSName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(host_textfield)
                            .addComponent(port_textfield, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(Connect)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(saveToDb)
                                .addGap(55, 55, 55)
                                .addComponent(saveAsCsv)
                                .addGap(49, 49, 49))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Get)
                        .addGap(187, 187, 187))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DBMSName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(host_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(port_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(user_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(password_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dbname_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(table_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addComponent(Connect)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(Get)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveToDb)
                            .addComponent(saveAsCsv))
                        .addGap(13, 13, 13)))
                .addComponent(connected_label)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void user_textfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_textfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_user_textfieldActionPerformed

    private void host_textfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_host_textfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_host_textfieldActionPerformed

    private void ConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectActionPerformed
         try {
            getConnection();
            connected_label.setVisible(true);
            connected_label.setText("connected");
            connected_label.setForeground(Color.green);

        } catch (SQLException ex) {
            System.out.println(ex.getSQLState());
            connected_label.setVisible(true);
            connected_label.setText("connection error");
            connected_label.setForeground(Color.red);
        }
    }//GEN-LAST:event_ConnectActionPerformed

    private void saveToDbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveToDbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveToDbActionPerformed

    private void saveAsCsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsCsvActionPerformed
        createfile g = new createfile();
        g.openFile();
        g.addRecords();
        g.closeFile();
    }//GEN-LAST:event_saveAsCsvActionPerformed

    private void GetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetActionPerformed
      // TODO add your handling code here:
      
       /* try{
            String dbname = dbname_textfield.getText();
            String table = table_textfield.getText();
            String db_table = dbname + "." + table;
            
            Connection dbmsconn = getConnection();
            Statement sta = dbmsconn.createStatement();
            //calling all data from the table
            ResultSet myres = sta.executeQuery("select * from "+ db_table);
            //Displaying the data
            String result = "<b>ID -- gid -- name -- geom</b><br>";
            while(myres.next()){
                //change the field name accordig to your field name
		result = result + myres.getInt("gid")+" -- "+myres.getString("name")+" -- "+myres.getString("geom") + "<br>";
               
            }
            //html to support text breaks
            result = "<html><body>" + result + "</body></html>";
            //results_label.setVisible(true);
            //results_label.setText(result);
        }
        catch (SQLException ex) {
            System.out.println(ex.getSQLState());
        }*/
    }//GEN-LAST:event_GetActionPerformed

    public void display_shapes() {
        ArrayList<Shapes> list = shapeList();
        DefaultTableModel model = (DefaultTableModel)file_viewer.getModel();
        Object[] row = new Object[3];
        for (int i =0; i<list.size(); i++) {
            row[0] = list.get(i).getgid();
            row[1] = list.get(i).getname();
            row[2] = list.get(i).getgeom();
            model.addRow(row);
        }
    }
    
    public Connection getConnection () throws SQLException {
        String host = host_textfield.getText();
        String port = port_textfield.getText();
        String dbname = dbname_textfield.getText();
        String user = user_textfield.getText();
        String password = password_textfield.getText();
        String DBMS = (String) DBMSName.getText();

        String connection = "jdbc:"+ DBMS +"://" + host + ":" + port + "/" + dbname + "?autoReconnect=true&useSSL=false";
        
        Connection dbmsconn = DriverManager.getConnection(connection, user, password);
        return dbmsconn;
    }    
    
     public class createfile {
        private Formatter file;
        
        public void openFile() {
            try {
                file = new Formatter("coordinates.csv");
            }
            catch(Exception e) {
                System.out.println("you have an error");
            }
        }
        
        public void addRecords() {
        file.format("%s%s%s", "gid ", "name ", "geom ");
        }
    
        public void closeFile() {
            file.close();
        }
}
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Connect;
    private javax.swing.JTextField DBMSName;
    private javax.swing.JButton Get;
    private javax.swing.JLabel connected_label;
    private javax.swing.JTextField dbname_textfield;
    private javax.swing.JTable file_viewer;
    private javax.swing.JTextField host_textfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPasswordField password_textfield;
    private javax.swing.JTextField port_textfield;
    private javax.swing.JButton saveAsCsv;
    private javax.swing.JButton saveToDb;
    private javax.swing.JTextField table_textfield;
    private javax.swing.JTextField user_textfield;
    // End of variables declaration//GEN-END:variables
}
